<?xml version="1.0" encoding="UTF-8"?>

<project name="Aimeos" default="all">

	<property name="coredir" value="${project.basedir}" override="false" />
	<property name="extdir" value="${project.basedir}/ext" override="false" />
	<property name="bindir" value="${project.basedir}/vendor/bin/" override="false" />


	<target name="setup" description="Sets up database incl. unit test data">
		<echo msg="Setting up test database" />
		<exec command="php ${coredir}/setup.php unittest unittest" checkreturn="true" logoutput="true"/>
	</target>

	<target name="setupperf" description="Sets up database incl. performance test data">
		<echo msg="Setting up performance data" />
		<exec command="php ${coredir}/setup.php unitperf unitperf" checkreturn="true" logoutput="true"/>
	</target>


	<target name="coverage" description="Creates coverage reports">
		<phing target="coverage" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="coverage" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="coverage" haltonfailure="true" dir="${coredir}/controller/common" />
		<phing target="coverage" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="coverageext" description="Creates coverage report for specific extension directory">
		<phing target="coverage" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>


	<target name="test" description="Executes unit tests">
		<phing target="test" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="test" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="test" haltonfailure="true" dir="${coredir}/controller/common" />
		<phing target="test" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="testext" description="Executes tests of specific extension directory">
		<phing target="test" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>

	<target name="testperf" description="Executes performance tests">
		<phing target="testperf" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="testperf" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="testperf" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="check" description="Executes all checks">
		<property name="codestddir" value="${project.basedir}/misc/coding" override="true" />
		<phing target="check" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="check" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="check" haltonfailure="true" dir="${coredir}/controller/common" />
		<phing target="check" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="checkext" description="Executes checks of specific extension directory">
		<property name="codestddir" value="${project.basedir}/misc/coding" override="true" />
		<phing target="check" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>


	<target name="doc" description="Generates the documentation" depends="test">
		<taskdef name="confdoc" classname="MShopConfigDocTask" classpath="${coredir}/misc/phing" />
		<mkdir dir="${coredir}/misc/confdoc/" />
		<echo msg="Generating config documentation" />
		<confdoc keyprefix="controller/common" wikiprefix="Configuration/Core" keyparts="0"
			optfile="${coredir}/controller/common/tests/confdoc.ser"
			outfile="${coredir}/misc/confdoc/core-controller-common.wiki">
			<fileset dir="${coredir}/controller/common/src" expandsymboliclinks="true" >
				<include name="**/*.php" />
			</fileset>
		</confdoc>
		<confdoc keyprefix="madmin" wikiprefix="Configuration/Core" keyparts="1"
			optfile="${coredir}/lib/mshoplib/tests/confdoc.ser"
			outfile="${coredir}/misc/confdoc/core-madmin.wiki">
			<fileset dir="${coredir}/lib/mshoplib/src/MAdmin" expandsymboliclinks="true" >
				<include name="**/*.php" />
			</fileset>
		</confdoc>
		<confdoc keyprefix="mshop" wikiprefix="Configuration/Core" keyparts="1"
			optfile="${coredir}/lib/mshoplib/tests/confdoc.ser"
			outfile="${coredir}/misc/confdoc/core-mshop.wiki">
			<fileset dir="${coredir}/lib/mshoplib/src/MShop" expandsymboliclinks="true" >
				<include name="**/*.php" />
			</fileset>
		</confdoc>
	</target>

	<target name="api" description="Generates the API documentation">
		<delete dir="${coredir}/misc/apidoc" quiet="true" failonerror="false" />
		<exec command="php ${coredir}/vendor/bin/apigen generate --template-theme=bootstrap
			--title='Aimeos Core API documentation' --tree  --no-source-code -d misc/apidoc
			-s admin/jqadm/src/ -s client/html/src/ -s controller/common/src/
			-s controller/frontend/src/ -s controller/jobs/src/ -s controller/jsonadm/src/
			-s lib/mshoplib/src/ -s lib/mwlib/src/" checkreturn="true" logoutput="true"/>
	</target>


	<target name="clean" description="Cleans up temporary files">
		<delete dir="${coredir}/misc/apidoc" quiet="true" failonerror="false" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/lib/mwlib" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="clean" haltonfailure="true" dir="${coredir}/controller/common" />
		<phing target="clean" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="i18n" description="Creates all translation files">
		<phing target="i18n" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="i18n" haltonfailure="true" dir="${coredir}/controller/common" />
		<phing target="i18n" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="build" description="Creates all files to be generated" >
		<exec command="tx pull -a -f" checkreturn="true" logoutput="true" />
		<phing target="build" haltonfailure="true" dir="${coredir}/lib/mshoplib" />
		<phing target="build" haltonfailure="true" dir="${coredir}/controller/common" />
		<phing target="build" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
    </target>


	<target name="deploy" description="Executes all deployments" depends="clean,build">
		<propertyprompt propertyName="version" promptText="Enter release version" promptCharacter=":" useExistingValue="true"/>
		<exec command="tar -c --bzip2 --exclude-from=.exclude -f ../aimeos-core_${version}.tar.bz2 ."
			checkreturn="true" logoutput="true"/>
		<filehash file="../aimeos-core_${version}.tar.bz2" hashtype="1" />
		<echo msg="SHA1 hash value: ${filehashvalue}" />
	</target>


	<target name="release" description="Creates new release" depends="build">
		<propertyprompt propertyName="version" promptText="Enter release version" promptCharacter=":" useExistingValue="true"/>
		<exec command="git branch ${version}" checkreturn="true" logoutput="true" />
		<exec command="git tag -a ${version}.1 -m 'Release ${version}.1'" checkreturn="true" logoutput="true" />
		<exec command="git push origin ${version}" checkreturn="true" logoutput="true" />
		<exec command="git push --tags" checkreturn="true" logoutput="true" />
	</target>

	<target name="releaseext" description="Creates new releases of the extensions">
		<propertyprompt propertyName="version" promptText="Enter release version" promptCharacter=":" useExistingValue="true"/>
		<phing target="release">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="createext" description="Creates new extension">
		<propertyprompt propertyName="extname" promptText="Enter extension name (only A-Z, a-z, 0-9 and -)" promptCharacter=":" useExistingValue="true"/>
		<copy todir="${extdir}/${extname}" >
			<fileset dir="${coredir}/misc/ext-template">
				<exclude name="**/.gitkeep" />
				<include name="**" />
			</fileset>
		</copy>
		<reflexive>
		  <fileset dir="${extdir}/${extname}">
		  	<include name="**" />
		  </fileset>
		  <filterchain>
		    <replaceregexp>
		      <regexp pattern="&lt;extname&gt;" replace="${extname}"/>
		    </replaceregexp>
		  </filterchain>
		</reflexive>
	</target>


	<target name="all" depends="setup,test,check" description="Executes all essential targets for testing" />

</project>
